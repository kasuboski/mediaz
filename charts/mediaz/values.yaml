# Default values for mediaz.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

port: &port 8080

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1 # @schema default: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/kasuboski/mediaz # @schema default: "ghcr.io/kasuboski/mediaz"
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent # @schema default: "IfNotPresent"
  # Overrides the image tag whose default is the chart appVersion.
  tag: "" #

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: [] # @schema default: []
# This is to override the chart name.
nameOverride: "" # @schema default: ""
fullnameOverride: "" # @schema default: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true # @schema default: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true # @schema default: true
  # Annotations to add to the service account
  annotations: {} # @schema default: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "" # @schema default: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {} # @schema default: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {} # @schema default: {}

podSecurityContext:
  {} # @schema default: {}
  # fsGroup: 2000

securityContext:
  {} # @schema default: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP # @schema default: "ClusterIP"
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: *port # @schema default: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false # @schema default: false
  className: "" # @schema default: ""
  annotations:
    {} # @schema default: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: # @schema default: [{"host": "chart-example.local", "paths": [{"path": "/", "pathType": "ImplementationSpecific"}]}]
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [] # @schema default: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

httproute:
  enabled: false # @schema default: false
  labels: {} # @schema default: {}
  annotations: {} # @schema default: {}
  parentRefs: # @schema default: [{"name": "gateway", "namespace": "envoy-gateway-system"}]
    - name: gateway
      namespace: envoy-gateway-system
  hostnames: # @schema default: ["mediaz.local"]
    - mediaz.local
  rules: # @schema default: {"backendRefs": [{"name": "mediaz", "port": 8080}]}
    backendRefs:
      - name: mediaz
        port: *port

resources:
  {} # @schema default: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe: # @schema default: {"httpGet": {"path": "/healthz", "port": "http"}}
  httpGet:
    path: /healthz
    port: http
readinessProbe: # @schema default: {"httpGet": {"path": "/healthz", "port": "http"}}
  httpGet:
    path: /healthz
    port: http

# Additional volumes on the output Deployment definition.
volumes: [] # @schema default: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: [] # @schema default: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {} # @schema default: {}

tolerations: [] # @schema default: []

affinity: {} # @schema default: {}

persistence:
  enabled: false # @schema default: false
  # existingClaim: ""  # Use an existing PVC instead of creating a new one
  # storageClass: ""
  accessMode: ReadWriteOnce # @schema default: "ReadWriteOnce"
  size: 256Mi # @schema default: "256Mi"
  mountPath: /config # @schema default: "/config"
  annotations: {} # @schema default: {}
  labels: {} # @schema default: {}

prowlarr:
  # apiKey: "" # yolo
  secretRef: "" # @schema default: ""

tmdb:
  # apiKey: "" # yolo
  secretRef: "" # @schema default: ""

config:
  filePath: "/app/config.yaml" # @schema default: "/app/config.yaml"
  # prowlarr:
  #   uri: "http://prowlarr.local" #

  # tmdb:
  #   uri: https://api.themoviedb.org

  library:
    tv: "/tv" # @schema default: "/tv"
    movie: "/movies" # @schema default: "/movies"
    downloadMountDir: "/downloads" # @schema default: "/downloads"

  # manager:
  #   jobs:
  #     seriesReconcile: 10m
  #     movieReconcile: 10m
  #     seriesIndex: 10m
  #     movieIndex: 10m

  server:
    port: *port # @schema default: 8080
    # staticAssetsDir: "./frontend/dist"
