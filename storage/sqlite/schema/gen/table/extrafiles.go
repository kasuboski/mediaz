//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var ExtraFiles = newExtraFilesTable("", "ExtraFiles", "")

type extraFilesTable struct {
	sqlite.Table

	// Columns
	ID           sqlite.ColumnInteger
	MovieId      sqlite.ColumnInteger
	MovieFileId  sqlite.ColumnInteger
	RelativePath sqlite.ColumnString
	Extension    sqlite.ColumnString
	Added        sqlite.ColumnTimestamp
	LastUpdated  sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type ExtraFilesTable struct {
	extraFilesTable

	EXCLUDED extraFilesTable
}

// AS creates new ExtraFilesTable with assigned alias
func (a ExtraFilesTable) AS(alias string) *ExtraFilesTable {
	return newExtraFilesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ExtraFilesTable with assigned schema name
func (a ExtraFilesTable) FromSchema(schemaName string) *ExtraFilesTable {
	return newExtraFilesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ExtraFilesTable with assigned table prefix
func (a ExtraFilesTable) WithPrefix(prefix string) *ExtraFilesTable {
	return newExtraFilesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ExtraFilesTable with assigned table suffix
func (a ExtraFilesTable) WithSuffix(suffix string) *ExtraFilesTable {
	return newExtraFilesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newExtraFilesTable(schemaName, tableName, alias string) *ExtraFilesTable {
	return &ExtraFilesTable{
		extraFilesTable: newExtraFilesTableImpl(schemaName, tableName, alias),
		EXCLUDED:        newExtraFilesTableImpl("", "excluded", ""),
	}
}

func newExtraFilesTableImpl(schemaName, tableName, alias string) extraFilesTable {
	var (
		IDColumn           = sqlite.IntegerColumn("Id")
		MovieIdColumn      = sqlite.IntegerColumn("MovieId")
		MovieFileIdColumn  = sqlite.IntegerColumn("MovieFileId")
		RelativePathColumn = sqlite.StringColumn("RelativePath")
		ExtensionColumn    = sqlite.StringColumn("Extension")
		AddedColumn        = sqlite.TimestampColumn("Added")
		LastUpdatedColumn  = sqlite.TimestampColumn("LastUpdated")
		allColumns         = sqlite.ColumnList{IDColumn, MovieIdColumn, MovieFileIdColumn, RelativePathColumn, ExtensionColumn, AddedColumn, LastUpdatedColumn}
		mutableColumns     = sqlite.ColumnList{MovieIdColumn, MovieFileIdColumn, RelativePathColumn, ExtensionColumn, AddedColumn, LastUpdatedColumn}
	)

	return extraFilesTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		MovieId:      MovieIdColumn,
		MovieFileId:  MovieFileIdColumn,
		RelativePath: RelativePathColumn,
		Extension:    ExtensionColumn,
		Added:        AddedColumn,
		LastUpdated:  LastUpdatedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
