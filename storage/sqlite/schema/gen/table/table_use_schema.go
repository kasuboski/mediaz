//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

// UseSchema sets a new schema name for all generated table SQL builder types. It is recommended to invoke
// this method only once at the beginning of the program.
func UseSchema(schema string) {
	AlternativeTitles = AlternativeTitles.FromSchema(schema)
	AutoTagging = AutoTagging.FromSchema(schema)
	Blocklist = Blocklist.FromSchema(schema)
	Collections = Collections.FromSchema(schema)
	Commands = Commands.FromSchema(schema)
	Config = Config.FromSchema(schema)
	Credits = Credits.FromSchema(schema)
	CustomFilters = CustomFilters.FromSchema(schema)
	CustomFormats = CustomFormats.FromSchema(schema)
	DelayProfiles = DelayProfiles.FromSchema(schema)
	DownloadClientStatus = DownloadClientStatus.FromSchema(schema)
	DownloadClients = DownloadClients.FromSchema(schema)
	DownloadHistory = DownloadHistory.FromSchema(schema)
	ExtraFiles = ExtraFiles.FromSchema(schema)
	History = History.FromSchema(schema)
	ImportExclusions = ImportExclusions.FromSchema(schema)
	ImportListMovies = ImportListMovies.FromSchema(schema)
	ImportListStatus = ImportListStatus.FromSchema(schema)
	ImportLists = ImportLists.FromSchema(schema)
	IndexerStatus = IndexerStatus.FromSchema(schema)
	Indexers = Indexers.FromSchema(schema)
	Metadata = Metadata.FromSchema(schema)
	MetadataFiles = MetadataFiles.FromSchema(schema)
	MovieFiles = MovieFiles.FromSchema(schema)
	MovieMetadata = MovieMetadata.FromSchema(schema)
	MovieTranslations = MovieTranslations.FromSchema(schema)
	Movies = Movies.FromSchema(schema)
	NamingConfig = NamingConfig.FromSchema(schema)
	NotificationStatus = NotificationStatus.FromSchema(schema)
	Notifications = Notifications.FromSchema(schema)
	PendingReleases = PendingReleases.FromSchema(schema)
	QualityDefinitions = QualityDefinitions.FromSchema(schema)
	QualityProfiles = QualityProfiles.FromSchema(schema)
	ReleaseProfiles = ReleaseProfiles.FromSchema(schema)
	RemotePathMappings = RemotePathMappings.FromSchema(schema)
	RootFolders = RootFolders.FromSchema(schema)
	ScheduledTasks = ScheduledTasks.FromSchema(schema)
	SubtitleFiles = SubtitleFiles.FromSchema(schema)
	Tags = Tags.FromSchema(schema)
	Users = Users.FromSchema(schema)
	VersionInfo = VersionInfo.FromSchema(schema)
}
