//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var DownloadClientStatus = newDownloadClientStatusTable("", "DownloadClientStatus", "")

type downloadClientStatusTable struct {
	sqlite.Table

	// Columns
	ID                sqlite.ColumnInteger
	ProviderId        sqlite.ColumnInteger
	InitialFailure    sqlite.ColumnTimestamp
	MostRecentFailure sqlite.ColumnTimestamp
	EscalationLevel   sqlite.ColumnInteger
	DisabledTill      sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type DownloadClientStatusTable struct {
	downloadClientStatusTable

	EXCLUDED downloadClientStatusTable
}

// AS creates new DownloadClientStatusTable with assigned alias
func (a DownloadClientStatusTable) AS(alias string) *DownloadClientStatusTable {
	return newDownloadClientStatusTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DownloadClientStatusTable with assigned schema name
func (a DownloadClientStatusTable) FromSchema(schemaName string) *DownloadClientStatusTable {
	return newDownloadClientStatusTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DownloadClientStatusTable with assigned table prefix
func (a DownloadClientStatusTable) WithPrefix(prefix string) *DownloadClientStatusTable {
	return newDownloadClientStatusTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DownloadClientStatusTable with assigned table suffix
func (a DownloadClientStatusTable) WithSuffix(suffix string) *DownloadClientStatusTable {
	return newDownloadClientStatusTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDownloadClientStatusTable(schemaName, tableName, alias string) *DownloadClientStatusTable {
	return &DownloadClientStatusTable{
		downloadClientStatusTable: newDownloadClientStatusTableImpl(schemaName, tableName, alias),
		EXCLUDED:                  newDownloadClientStatusTableImpl("", "excluded", ""),
	}
}

func newDownloadClientStatusTableImpl(schemaName, tableName, alias string) downloadClientStatusTable {
	var (
		IDColumn                = sqlite.IntegerColumn("Id")
		ProviderIdColumn        = sqlite.IntegerColumn("ProviderId")
		InitialFailureColumn    = sqlite.TimestampColumn("InitialFailure")
		MostRecentFailureColumn = sqlite.TimestampColumn("MostRecentFailure")
		EscalationLevelColumn   = sqlite.IntegerColumn("EscalationLevel")
		DisabledTillColumn      = sqlite.TimestampColumn("DisabledTill")
		allColumns              = sqlite.ColumnList{IDColumn, ProviderIdColumn, InitialFailureColumn, MostRecentFailureColumn, EscalationLevelColumn, DisabledTillColumn}
		mutableColumns          = sqlite.ColumnList{ProviderIdColumn, InitialFailureColumn, MostRecentFailureColumn, EscalationLevelColumn, DisabledTillColumn}
	)

	return downloadClientStatusTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                IDColumn,
		ProviderId:        ProviderIdColumn,
		InitialFailure:    InitialFailureColumn,
		MostRecentFailure: MostRecentFailureColumn,
		EscalationLevel:   EscalationLevelColumn,
		DisabledTill:      DisabledTillColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
