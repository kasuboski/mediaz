// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kasuboski/mediaz/pkg/download (interfaces: Factory)
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/mock_factory.go github.com/kasuboski/mediaz/pkg/download Factory
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	download "github.com/kasuboski/mediaz/pkg/download"
	model "github.com/kasuboski/mediaz/pkg/storage/sqlite/schema/gen/model"
	gomock "go.uber.org/mock/gomock"
)

// MockFactory is a mock of Factory interface.
type MockFactory struct {
	ctrl     *gomock.Controller
	recorder *MockFactoryMockRecorder
}

// MockFactoryMockRecorder is the mock recorder for MockFactory.
type MockFactoryMockRecorder struct {
	mock *MockFactory
}

// NewMockFactory creates a new mock instance.
func NewMockFactory(ctrl *gomock.Controller) *MockFactory {
	mock := &MockFactory{ctrl: ctrl}
	mock.recorder = &MockFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFactory) EXPECT() *MockFactoryMockRecorder {
	return m.recorder
}

// NewDownloadClient mocks base method.
func (m *MockFactory) NewDownloadClient(arg0 model.DownloadClient) (download.DownloadClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDownloadClient", arg0)
	ret0, _ := ret[0].(download.DownloadClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewDownloadClient indicates an expected call of NewDownloadClient.
func (mr *MockFactoryMockRecorder) NewDownloadClient(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDownloadClient", reflect.TypeOf((*MockFactory)(nil).NewDownloadClient), arg0)
}
